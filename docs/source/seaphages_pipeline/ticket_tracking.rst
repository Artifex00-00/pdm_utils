Ticket tracking
===============



With new genome sequences and annotations routinely becoming available for PhameratorDB, and with thousands of researchers routinely using Phamerator, many updates and issues relating to the general management of PhameratorDB, or specifically to the Actino_Draft instance, arise. Together, these diverse actions constitute database “tickets”, such as:

    - New genome sequences need to be auto-annotated and imported
    - New preliminary final annotations need to be reviewed and imported
    - Updated SEA-PHAGES genomes in GenBank need to be imported
    - New non-SEA-PHAGES genomes in GenBank need to be imported
    - Changes need to be made to genome information (e.g. host, cluster, etc.) or to gene information (e.g. coordinates, descriptions, etc.)
    - Genes need to be added or removed

Systematically maintaining and addressing tickets provides a framework for efficient database management. As a result, two separate ticket tracking systems have been developed.

In order to handle and control requests and notifications regarding new database tickets from various sources, an email-based ticket tracking system has been developed [Figure 1]. The email account, phamerator.qc@gmail.com, provides a standardized communication channel between the database administrator and end-users to improve database management by tracking, addressing, and storing unstructured tickets in the form of emails. Tickets regarding a) the availability of new genome sequences or new preliminary final annotations are submitted from PhagesDB, b) revisions to final annotations are submitted from any of the annotators, and c) specific, miscellaneous issues or questions about the database are submitted from any end-user. All tickets that need to be addressed are stored in the inbox. After they are addressed, the originator (or submitter) of the ticket can be directly notified that it has been addressed. The email account can be used to maintain a history of tickets by systematically storing emails after they are addressed.

A second, structured, database ticketing system has been developed to import new data, make updates to the database, and maintain a record of updates. This ticketing system plays an integral component to the automated PhameratorDB management system and to the collection of ``pdm_utils`` scripts [Table 2]. For most types of updates to the database, there needs to be a unique ticket in a csv-formatted import_table that provides instructions on how to implement the update. Within the import_table, an individual row of data populating 11 columns constructs a unique ticket. There are currently four types of tickets that the import script can implement (add, remove, replace, and update), and this information is indicated in Column 1. Add indicates that a new phage genome (Phage #1) needs to be added to the database. Remove indicates that a phage genome (Phage #2) currently in the database needs to be removed. Replace indicates that a phage genome (Phage #2) currently in the database needs to be replaced with a new phage genome (Phage #1). Update indicates that no genome is being added, removed, or replaced, but that new metadata for a phage genome (Phage #1) currently in the database needs to be updated.

The remaining 10 fields provide the necessary information for the ticket to be implemented. Column 2 indicates the name of the new phage genome that update, add, and replace tickets address, and columns 3 through 9 contain metadata pertaining to that phage that will be used to populate fields in the database. Column 6 indicates the stage of gene annotations (draft, final, unknown). Column 7 indicates whether SEA-PHAGES has control of the annotations (1, 0). Column 8 indicates which field of the CDS features in the associated Genbank-formatted flat file is expected to contain the gene descriptions (note, function, product). Column 10 indicates the run mode (pecaan, phagesdb, ncbi_auto, ncbi_misc, other, custom) for add and replace tickets, determining which QC checks are used to evaluate the associated flat file. Column 11 indicates the name of the phage genome that will be removed in replace and remove tickets. Import tickets are automatically generated by the retrieve_database_updates.py script, but they can also be manually generated. Details about different types of tickets are described below, and examples of how the data retrieval script creates tickets are provided in Table 2.

.. TODO insert table describing ticket structure
